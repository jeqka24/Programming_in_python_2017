Тест, 14 вопросов

1. 

Системный вызов fork

    используется для создания дочернего процесса

    создает точную копию родительского процесса


2. Системный вызов fork

    в родительском процессе вызов fork возвращает pid дочернего

    в дочернем процессе вызов fork возвращает 0

3. Что происходит с памятью в дочернем процессе при работе с Python?

    Копируется из родительского процесса

4. Файловые дескрипторы в дочернем процессе

    будут скопированы

5. Выделить истинные выражения:

    блокировки нужно брать в одном порядке, освобождать в обратном

    предпочтительнее использовать контекстный менеджер для работы с блокировками в Python


6. Очереди замедляют процесс работы потоков Python, лучше использовать объекты блокировки

    Нет

7. Выделить истинные выражения:

    GIL нужен для защиты памяти интерпретатора от разрушений

    GIL никак не влияет на выполнение отдельных процессов на Python3

    GIL запрещает одновременное выполнение инструкций байткода в разных потоках

8. Если программа на Python выполняет много операций ввода вывода (IO-bound), то для ускорения ее работы нужно

    разбить ее на отдельные функции, выполнить их в потоках

9. Если программа на Python выполняет операции вычисления, требующие только CPU (CPU-bound), то для ускорения ее работы нужно

    создать отдельные процессы

10. Генератор в Python – это

    функция в которой присутствует инструкция yield


11. Отметить все истинные утверждения: - не правильно!

    исключение StopIteration используется для остановки работы итератора

    итератор прерывает свое выполнение на каждой итерации, сохраняя состояние локальных переменных

            итератор хранит значение для генерации следующего элемента последовательности в self

            генератор хранит значение для генерации следующего элемента последовательности в локальных переменных

12. Отметить все истинные утверждения:

            ? исключения нельзя обрабатывать в сопрограммах, это нужно делать в основном потоке

    сопрограмма может прерывать свою работу, сохраняя свое состояние и значения всех локальных переменных

    из одной сопрограммы можно вызвать другую при помощи yield from

13. Отметить все истинные утверждения, касающиеся asyncio event loop:

    позволяет выполнять корутины, зарегистрированные в нем

    выполняет все корутины последовательно, переключая контекст между ними

            ?отвечает за выделение памяти в основном процессе

14. Отметить все истинные утверждения: - не правильно!

    объект типа asyncio.Task выполняется в отдельном потоке управления, никак не влияя на выполнения других объектов типа asyncio.Task

    из объектов типа asyncio.Future можно создавать цепочки и дожидаться их выполнения в asyncio event loop

    объект типа asyncio.Task хранит в себе связанную корутину и содержит статус ее выполнения

---------------------------------------------------------------------------
14. Отметить все истинные утверждения:

    объект типа asyncio.Task выполняется в отдельном потоке управления, никак не влияя на выполнения других объектов типа asyncio.Task

    из объектов типа asyncio.Future можно создавать цепочки и дожидаться их выполнения в asyncio event loop

11. Отметить все истинные утверждения: - не правильно!

    исключение StopIteration используется для остановки работы итератора

    итератор хранит значение для генерации следующего элемента последовательности в self

    генератор хранит значение для генерации следующего элемента последовательности в локальных переменных
